// <auto-generated />
using System;
using Flexi_Biller_Back.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Flexi_Biller_Back.Migrations
{
    [DbContext(typeof(ExtServiceContext))]
    [Migration("20240618073605_Part2")]
    partial class Part2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Flexi_Biller_Back.Models.DpActivityx", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Action")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("action");

                    b.Property<string>("Branch")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("branch");

                    b.Property<string>("Browser")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("browser");

                    b.Property<string>("TimeLog")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("timeLog");

                    b.Property<string>("UserData")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("userData");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("userID");

                    b.Property<string>("UserIp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("userIP");

                    b.HasKey("Id")
                        .HasName("PK_dp_activity");

                    b.ToTable("dp_activityx", (string)null);
                });

            modelBuilder.Entity("Flexi_Biller_Back.Models.DpAdvert", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Created_By");

                    b.Property<string>("DateCreated")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Date_Created");

                    b.Property<string>("EndDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Extras")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ShortName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StartDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Statuz")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("dp_adverts", (string)null);
                });

            modelBuilder.Entity("Flexi_Biller_Back.Models.DpAppsettingsx", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Settings")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("settings");

                    b.Property<string>("Svalue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("svalue");

                    b.HasKey("Id")
                        .HasName("PK__dp_appse__3214EC07F9F1F285");

                    b.ToTable("dp_appsettingsx", (string)null);
                });

            modelBuilder.Entity("Flexi_Biller_Back.Models.DpBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BankCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BankName")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Isocountry")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ISOCountry");

                    b.HasKey("Id");

                    b.ToTable("dp_banks", (string)null);
                });

            modelBuilder.Entity("Flexi_Biller_Back.Models.DpCountry", b =>
                {
                    b.Property<string>("Currency")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("currency")
                        .IsFixedLength();

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Iname")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("iname");

                    b.Property<string>("Iso")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("iso");

                    b.Property<string>("Iso3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("iso3");

                    b.Property<string>("IsoCurrency")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("iso_currency")
                        .IsFixedLength();

                    b.Property<string>("Oname")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("oname");

                    b.Property<short?>("Phonecode")
                        .HasColumnType("smallint")
                        .HasColumnName("phonecode");

                    b.ToTable("dp_country", (string)null);
                });

            modelBuilder.Entity("Flexi_Biller_Back.Models.DpGlyde", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<double?>("AmountPaid")
                        .HasColumnType("float");

                    b.Property<int>("Branches")
                        .HasColumnType("int");

                    b.Property<string>("CategoryId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("categoryID");

                    b.Property<string>("CompanyEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("countryCode");

                    b.Property<decimal>("Credit")
                        .HasColumnType("money")
                        .HasColumnName("credit");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DatabaseSize")
                        .HasColumnType("float");

                    b.Property<string>("DateModified")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("dateModified");

                    b.Property<decimal>("Debit")
                        .HasColumnType("money")
                        .HasColumnName("debit");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("money")
                        .HasColumnName("discount");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Extras")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("extras");

                    b.Property<string>("InstCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("instCode");

                    b.Property<string>("InstituitionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Narration")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("narration");

                    b.Property<string>("PackageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProviderId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("providerID");

                    b.Property<string>("Recipient")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("recipient");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Statuz")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("statuz");

                    b.Property<string>("TransDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("transDate");

                    b.Property<string>("TransId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("transID");

                    b.Property<string>("TransType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("transType");

                    b.Property<string>("Userid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("userid");

                    b.Property<int>("Users")
                        .HasColumnType("int");

                    b.Property<string>("ValueDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("dp_glyde", (string)null);
                });

            modelBuilder.Entity("Flexi_Biller_Back.Models.DpInstitution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccNoType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AccrualSreverse")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AccrualSReverse");

                    b.Property<string>("AccrualSusp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Acoset")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ACOSet");

                    b.Property<string>("Aitset")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AITSet");

                    b.Property<string>("Attset")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ATTSet");

                    b.Property<string>("BaseUrl")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("BaseURL");

                    b.Property<string>("BbankingSet")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BBankingSet");

                    b.Property<string>("BillingPlan")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("billingPlan");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Created_By");

                    b.Property<string>("Csrf")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CSRF");

                    b.Property<string>("CustLen")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DateCreated")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Date_Created");

                    b.Property<string>("DateUpdated")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Date_Updated");

                    b.Property<string>("EmptyTill")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ExtSet")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ExtUrl")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Extras")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FdintCalcDays")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FDIntCalcDays");

                    b.Property<string>("FysendDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FYSEndDate");

                    b.Property<string>("IbankingSet")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("IBankingSet");

                    b.Property<string>("Ibsettlement")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasDefaultValue("X")
                        .HasColumnName("IBSettlement")
                        .IsFixedLength();

                    b.Property<string>("Ifrmode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("IFRMode");

                    b.Property<string>("InstBilling")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("InstCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("InstCommBus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("InstCountry")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("InstCpemail")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("InstCPEmail");

                    b.Property<string>("InstCpemailSet")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("InstCPEmailSet");

                    b.Property<string>("InstCperson")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("InstCPerson");

                    b.Property<string>("InstCpphone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("InstCPPhone");

                    b.Property<string>("InstCurrency")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("InstEmail")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("InstEmailSet")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("InstFkey")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("InstFKey");

                    b.Property<string>("InstFkeySet")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("InstFKeySet");

                    b.Property<string>("InstIncCert")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("InstLicense")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("InstMigCodate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("InstMigCODate");

                    b.Property<string>("InstPkg")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("InstType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Lhsector")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("LHSector");

                    b.Property<string>("LintCalcDays")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LIntCalcDays");

                    b.Property<string>("LoanHub")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Logo")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("NameInst")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Nbranch")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NBranch");

                    b.Property<string>("Nspace")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NSpace");

                    b.Property<string>("Nuser")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NUser");

                    b.Property<string>("OdintCalcDays")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ODIntCalcDays");

                    b.Property<string>("PrdCacc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PrdCAcc");

                    b.Property<string>("PrdCodeSet")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PrdCsacc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PrdCSAcc");

                    b.Property<string>("PrdLacc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PrdLAcc");

                    b.Property<string>("PrdSacc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PrdSAcc");

                    b.Property<string>("PrdTdacc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PrdTDAcc");

                    b.Property<string>("ShortName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Statuz")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SystemDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TillState")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Updated_By");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ShortName" }, "IX_ShortName")
                        .IsUnique()
                        .HasFilter("[ShortName] IS NOT NULL");

                    b.ToTable("dp_institutions", (string)null);
                });

            modelBuilder.Entity("Flexi_Biller_Back.Models.DpLeave", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Approved_By");

                    b.Property<string>("Branch")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Commentx")
                        .HasMaxLength(5000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5000)");

                    b.Property<string>("DateApproved")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Date_Approved");

                    b.Property<string>("DateCreated")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Date_Created");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EndDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ndays")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NDays");

                    b.Property<string>("StartDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("P");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("userID");

                    b.HasKey("Id");

                    b.ToTable("dp_leave", (string)null);
                });

            modelBuilder.Entity("Flexi_Biller_Back.Models.DpNotification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DateInitiated")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("date_initiated");

                    b.Property<string>("DateModified")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("date_modified");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("message");

                    b.Property<string>("Recipient")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("recipient");

                    b.Property<string>("Remarks")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("remarks");

                    b.Property<string>("SenderId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("senderID");

                    b.Property<string>("Statuz")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("statuz")
                        .IsFixedLength();

                    b.Property<string>("Type")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("type")
                        .IsFixedLength();

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("userID");

                    b.HasKey("Id")
                        .HasName("PK_dp_notification");

                    b.ToTable("dp_notifications", (string)null);
                });

            modelBuilder.Entity("Flexi_Biller_Back.Models.DpState", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Iso3")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("iso3")
                        .IsFixedLength();

                    b.Property<string>("Oname")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("oname");

                    b.Property<string>("Scode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("scode")
                        .IsFixedLength();

                    b.ToTable("dp_states", (string)null);
                });

            modelBuilder.Entity("Flexi_Biller_Back.Models.DpTicket", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Datecreated")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("datecreated");

                    b.Property<string>("Emailaddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("emailaddress");

                    b.Property<string>("Extras")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("extras");

                    b.Property<string>("Lastreplyby")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("lastreplyby");

                    b.Property<string>("Lastupdated")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("lastupdated");

                    b.Property<string>("Sendername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sendername");

                    b.Property<string>("Shortname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("shortname");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<string>("Subject")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("subject");

                    b.Property<string>("Ticketid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ticketid");

                    b.Property<string>("Userid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("userid");

                    b.HasKey("Id");

                    b.ToTable("dp_tickets", (string)null);
                });

            modelBuilder.Entity("Flexi_Biller_Back.Models.DpTicketsmessage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Attachements")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("attachements");

                    b.Property<string>("Extras")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("extras");

                    b.Property<string>("Messagecontent")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("messagecontent");

                    b.Property<string>("Ticketid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ticketid");

                    b.HasKey("Id");

                    b.ToTable("dp_ticketsmessages", (string)null);
                });

            modelBuilder.Entity("Flexi_Biller_Back.Models.DpTransactionsExt", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AccName")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("AccNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AccountID");

                    b.Property<decimal?>("Charge")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<string>("CheckerId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CheckerID");

                    b.Property<string>("CheckerTs")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CheckerTS");

                    b.Property<decimal?>("Credit")
                        .HasColumnType("money");

                    b.Property<string>("DateUpdated")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Debit")
                        .HasColumnType("money");

                    b.Property<string>("DestBank")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Extras")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ForeignId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ForeignID");

                    b.Property<string>("Ipaddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("IPAddress");

                    b.Property<string>("MakerId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MakerID");

                    b.Property<string>("MakerTs")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MakerTS");

                    b.Property<string>("Narration")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SessionID");

                    b.Property<string>("SrcBank")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Statuz")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TransId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TransID");

                    b.Property<string>("TransType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tsrc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TSrc");

                    b.Property<string>("ValueDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ForeignId" }, "IX_ForeignKey")
                        .IsUnique();

                    b.HasIndex(new[] { "TransId" }, "IX_transID")
                        .IsUnique();

                    b.ToTable("dp_transactionsExt", (string)null);
                });

            modelBuilder.Entity("Flexi_Biller_Back.Models.DpTransx", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AccNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BranchCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("branchCode");

                    b.Property<string>("CategoryId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("categoryID");

                    b.Property<decimal?>("Charge")
                        .HasColumnType("money");

                    b.Property<decimal?>("Commission")
                        .HasColumnType("money")
                        .HasColumnName("commission");

                    b.Property<decimal>("Credit")
                        .HasColumnType("money")
                        .HasColumnName("credit");

                    b.Property<string>("DateModified")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("dateModified");

                    b.Property<decimal>("Debit")
                        .HasColumnType("money")
                        .HasColumnName("debit");

                    b.Property<string>("Descr")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("descr");

                    b.Property<string>("Extras")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("extras");

                    b.Property<string>("InstCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("instCode");

                    b.Property<string>("Narration")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("narration");

                    b.Property<string>("ProviderId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("providerID");

                    b.Property<string>("Recipient")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("recipient");

                    b.Property<string>("Statuz")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("statuz");

                    b.Property<string>("TransDate")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("transDate");

                    b.Property<string>("TransId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("transID");

                    b.Property<string>("Tsrc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TSrc");

                    b.Property<string>("Userid")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("userid");

                    b.Property<string>("ValueDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Xmode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("XMode");

                    b.HasKey("Id");

                    b.ToTable("dp_transx", (string)null);
                });

            modelBuilder.Entity("Flexi_Biller_Back.Models.DpUserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Deleted")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("deleted");

                    b.Property<string>("Extras")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("extras");

                    b.Property<string>("Ownedby")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ownedby");

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RolePriv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_userRoles");

                    b.ToTable("dp_userRoles", (string)null);
                });

            modelBuilder.Entity("Flexi_Biller_Back.Models.DpUserx", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccLevel")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("ApiKey")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Arole")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ARole");

                    b.Property<string>("Branch")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Created_By");

                    b.Property<string>("DateCreated")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Date_Created");

                    b.Property<string>("DateUpdated")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Date_Updated");

                    b.Property<string>("ExternalId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ExternalID");

                    b.Property<string>("Extras")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("extras");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Grole")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("GRole");

                    b.Property<string>("Ipaddress")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("IPAddress");

                    b.Property<string>("LastLogin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Pswd")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("pswd");

                    b.Property<long>("Smsbalance")
                        .HasColumnType("bigint")
                        .HasColumnName("SMSBalance");

                    b.Property<string>("Srole")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("SRole");

                    b.Property<string>("Statuz")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Udobirth")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("UDOBirth")
                        .IsFixedLength();

                    b.Property<string>("Uemail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("UEmail");

                    b.Property<string>("Ugender")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("UGender")
                        .IsFixedLength();

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Updated_By");

                    b.Property<string>("Uphone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("UPhone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("userID");

                    b.Property<string>("Utitle")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("UTitle")
                        .IsFixedLength();

                    b.HasKey("Id")
                        .HasName("PK_dp_users");

                    b.ToTable("dp_userx", (string)null);
                });

            modelBuilder.Entity("Flexi_Biller_Back.Models.InstituitionBillingTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccessDenied")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DaysLeft")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InstituitionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsInvoiceSent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BillingTable");
                });
#pragma warning restore 612, 618
        }
    }
}
